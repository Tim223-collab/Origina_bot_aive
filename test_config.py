"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
"""
import sys
import os
from pathlib import Path

# –§–∏–∫—Å –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == "win32":
    import codecs
    sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
    sys.stderr = codecs.getwriter("utf-8")(sys.stderr.detach())

def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n")
    
    errors = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
    if not Path(".env").exists():
        errors.append(".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   –°–æ–∑–¥–∞–π—Ç–µ: copy .env.example .env\n")
    else:
        print("‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω\n")
    
    # –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥–∞
    try:
        import config
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞\n")
    except Exception as e:
        errors.append(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}\n")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram
    print("üì± Telegram:")
    if not config.TELEGRAM_BOT_TOKEN:
        errors.append("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   ‚ùå Bot Token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        token_preview = config.TELEGRAM_BOT_TOKEN[:10] + "..."
        print(f"   ‚úÖ Bot Token: {token_preview}")
    
    if not config.ALLOWED_USER_IDS:
        errors.append("ALLOWED_USER_IDS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   ‚ùå User IDs –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print(f"   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {config.ALLOWED_USER_IDS}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DeepSeek
    print("ü§ñ DeepSeek AI:")
    if not config.DEEPSEEK_API_KEY:
        errors.append("DEEPSEEK_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   ‚ùå API Key –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        key_preview = config.DEEPSEEK_API_KEY[:10] + "..."
        print(f"   ‚úÖ API Key: {key_preview}")
        print(f"   ‚úÖ –ú–æ–¥–µ–ª—å: {config.DEEPSEEK_MODEL}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ —Å–∞–π—Ç–∞
    print("üåê –†–∞–±–æ—á–∏–π —Å–∞–π—Ç:")
    if not config.WORK_SITE_URL:
        warnings.append("WORK_SITE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        print("   ‚ö†Ô∏è URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    else:
        print(f"   ‚úÖ URL: {config.WORK_SITE_URL}")
        print(f"   ‚úÖ Username: {config.WORK_SITE_USERNAME}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    deps = {
        "telegram": "python-telegram-bot",
        "playwright": "playwright",
        "aiohttp": "aiohttp",
        "dotenv": "python-dotenv",
        "aiosqlite": "aiosqlite",
    }
    
    missing_deps = []
    for module, package in deps.items():
        try:
            __import__(module)
            print(f"   ‚úÖ {package}")
        except ImportError:
            missing_deps.append(package)
            print(f"   ‚ùå {package}")
    
    if missing_deps:
        errors.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing_deps)}")
        print(f"\n   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install {' '.join(missing_deps)}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Playwright
    print("üé≠ Playwright:")
    try:
        from playwright.sync_api import sync_playwright
        print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        try:
            with sync_playwright() as p:
                browser = p.chromium.launch(headless=True)
                browser.close()
            print("   ‚úÖ –ë—Ä–∞—É–∑–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            warnings.append("Playwright –±—Ä–∞—É–∑–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            print("   ‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            print("   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: playwright install chromium")
    except ImportError:
        errors.append("Playwright –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    print("üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
    data_dir = Path("data")
    if not data_dir.exists():
        data_dir.mkdir()
        print("   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    else:
        print("   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print()
    
    # –ò—Ç–æ–≥–∏
    print("=" * 50)
    if errors:
        print("\n‚ùå –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:\n")
        for i, error in enumerate(errors, 1):
            print(f"   {i}. {error}")
        print("\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!")
        return False
    elif warnings:
        print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n")
        for i, warning in enumerate(warnings, 1):
            print(f"   {i}. {warning}")
        print("\n‚úÖ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å, –Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")
        return True
    else:
        print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python main.py")
        return True

if __name__ == "__main__":
    try:
        success = check_config()
        sys.exit(0 if success else 1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        sys.exit(1)

